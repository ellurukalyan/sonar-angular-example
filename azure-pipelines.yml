trigger:
  branches:
    include:
    - master

pool:
  vmImage: 'Ubuntu 18.04'

variables:
  buildConfiguration: 'Release'
  ngBuildConfiguration: '--prod'

steps:

- task: Npm@1
  displayName: 'npm install'
  inputs:
    command: install
    workingDir: src

- task: Npm@1
  displayName: 'Build Angular'
  inputs:
    command: custom
    customCommand: run build -- $(ngBuildConfiguration)
    workingDir: src

- task: PublishPipelineArtifact@0
  inputs:
    artifactName: angular8PipelineArtifactProd
    targetPath: 'src/dist'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'src/dist'
    ArtifactName: angular8BuildArtifactProd

- task: DeleteFiles@1
  displayName: 'Delete Build files'
  inputs:
    Contents: 'src/dist'

- task: Npm@1
  displayName: 'Test Angular'
  inputs:
    command: custom
    customCommand: run test -- --watch=false --code-coverage
    workingDir: src

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage Angular results'
  condition: succeededOrFailed()
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: 'src/coverage/cobertura-coverage.xml'
    reportDirectory: src/coverage
    failIfCoverageEmpty: true

- task: PublishTestResults@2
  displayName: 'Publish Angular test results'
  condition: succeededOrFailed()
  inputs:
    searchFolder: $(System.DefaultWorkingDirectory)/src/
    testRunTitle: Angular
    testResultsFormat: JUnit
    testResultsFiles: "**/TESTS*.xml"

- task: Npm@1
  displayName: 'Lint Angular'
  inputs:
    command: custom
    customCommand: run lint --  --format=stylish
    workingDir: src

- task: Npm@1
  displayName: 'E2E Test Angular'
  inputs:
    command: custom
    customCommand: run e2e
    workingDir: src

- task: PublishTestResults@2
  displayName: 'Publish Angular E2E test results'
  condition: succeededOrFailed()
  inputs:
    searchFolder: $(System.DefaultWorkingDirectory)/e2e/
    testRunTitle: Angular_E2E
    testResultsFormat: JUnit
    testResultsFiles: "**/junit*.xml"